@GenModel(
    bundleManifest="false",
    modelDirectory="ru.neoflex.nfcore.reports/src/java/java-gen",
    complianceLevel="7.0",
    rootExtendsClass="org.eclipse.emf.ecore.impl.MinimalEObjectImpl",
    rootExtendsInterface="org.eclipse.emf.ecore.EObject"
)
package ru.neoflex.nfcore.masterdata
import ru.neoflex.nfcore.base.types.QName

abstract class BaseType {
    op boolean isPlain() {false}
    op boolean isStructure() {false}
    op boolean isArray() {false}
    op boolean isMap() {false}
    op boolean isShape() {false}
    op boolean isReferenceType() {false}
    op BaseType actualType() {this}
}

class PlainType extends BaseType {
    String javaClassName
    op boolean isPlain() {true}
}

class Field {
    String name
    contains BaseType fieldType
}

class Structure extends BaseType {
    contains Field[] fields
    op boolean isStructure() {true}
}

class Array extends BaseType {
    contains BaseType elementType
    op boolean isArray() {true}
}

class Map extends BaseType {
    contains BaseType valueType
    op boolean isMap() {true}
}

enum ShapeType {
    Point
    MultiPoint
    LineString
    MultiLineString
    Polygon
    MultiPolygon
    Rectangle
    GeometryCollection
}

class Shape extends BaseType {
    ShapeType shapeType
    op boolean isShape() {true}
}

class NamedType extends BaseType {
    QName name
    contains BaseType baseType
}

class ReferenceType extends BaseType {
    refers NamedType namedType
    op boolean isPlain() {namedType.isPlain()}
    op boolean isStructure() {namedType.isStructure()}
    op boolean isArray() {namedType.isArray()}
    op boolean isMap() {namedType.isMap()}
    op boolean isShape() {namedType.isShape()}
    op boolean isReferenceType() {true}
    op BaseType actualType() {namedType}
}

abstract class Feature {
    String name
    boolean isTimeDependent
    op boolean isAttribute() {false}
    op boolean isReference() {false}
}

class Attribute extends Feature {
    contains BaseType baseType
    op boolean isAttribute() {true}
}

class Reference extends Feature {
    refers Entity entity
    op boolean isReference() {true}
}

abstract class Index {
    String name
    refers Feature[] features
}

class PrimaryKey extends Index {
}

class ForeignKey extends Index {
    refers Entity entity
}

abstract class InvertedEntry extends Index {
}

class PlainIndex extends InvertedEntry {
    boolean isUnique
}

class FulltextIndex extends InvertedEntry {
}

class SpatialIndex extends InvertedEntry {
}

class Entity {
    QName name
    contains Feature[] features
    contains PrimaryKey primaryKey
    contains InvertedEntry[] indexes
    contains ForeignKey[] foreignKeys
}
