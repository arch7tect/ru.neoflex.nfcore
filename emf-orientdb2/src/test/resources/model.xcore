@GenModel(
    bundleManifest="false",
    modelDirectory="emf-orientdb/src/test/java-gen",
    rootExtendsClass="org.eclipse.emf.ecore.impl.MinimalEObjectImpl",
    complianceLevel="7.0"
)
package ru.neoflex.meta.test
import org.eclipse.emf.ecore.EObject
import org.eclipse.emf.ecore.EPackage
import org.eclipse.emf.ecore.EClass
import java.util.List

annotation "http://orientdb.com/meta" as orientdb

abstract class Authority {
    String qName
}

class Group extends Authority {
}

class User extends Authority {
    refers Group group
}

class Column {
	String name
	String dbType
}

abstract class DBKey {
	String name
    @orientdb(embedded="true")
	refers Column[] columns
}

@orientdb(embedded="true", oAbstract="true")
class PKey extends DBKey {}

class IEKey extends DBKey {
	boolean isUnique
}

class FKey extends DBKey {
    @orientdb(embedded="true")
	refers DBEntity entity
}

abstract class DBEntity {
	String qName
	contains PKey pKey
}

class DBTable extends DBEntity {
	contains Column[] columns
	contains IEKey[] indexes
	contains FKey[] fKeys
}

class DBView extends DBEntity {
	refers Column[] columns
    @orientdb(indexType="NOTUNIQUE_HASH_INDEX")
	boolean isMaterialized
}

class MetaView {
	id String qName
	refers EPackage aPackage
	refers EClass aClass
	refers EObject aObject
}

type ListOfDouble wraps List<Double>
type List2OfDouble wraps List<List<Double>>
type List3OfDouble wraps List<List<List<Double>>>

@orientdb(embedded="true", oClassName="OShape")
abstract class OShape {
}

@orientdb(oClassName="OPoint")
class OPoint extends OShape {
    Double[] coordinates
}

@orientdb(oClassName="OMultiPoint")
class OMultiPoint extends OShape {
    ListOfDouble[] coordinates
}

@orientdb(oClassName="OLineString")
class OLineString extends OShape {
    ListOfDouble[] coordinates
}

@orientdb(oClassName="OMultiLineString")
class OMultiLineString extends OShape {
    List2OfDouble[] coordinates
}

@orientdb(oClassName="OPolygon")
class OPolygon extends OShape {
    List2OfDouble[] coordinates
}

@orientdb(oClassName="OMultiPolygon")
class OMultiPolygon extends OShape {
    List3OfDouble[] coordinates
}

@orientdb(oClassName="ORectangle")
class ORectangle extends OShape {
    Double[] coordinates
}

@orientdb(oClassName="OGeometryCollection")
class OGeometryCollection extends OShape {
    contains OShape[] geometries
}

class Placemark {
    @orientdb(indexType="FULLTEXT")
    String name
    @orientdb(indexType="FULLTEXT")
    String description
    @orientdb(indexType="SPATIAL")
    contains OShape point
}

class Country {
    String gid
    @orientdb(indexType="FULLTEXT")
    String name
//    @orientdb(indexType="SPATIAL")
    contains OMultiPolygon geometry
}