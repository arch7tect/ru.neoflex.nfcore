@GenModel(
    bundleManifest="false",
    modelDirectory="ru.neoflex.nfcore.application/src/java/java-gen",
    complianceLevel="7.0",
    rootExtendsClass="org.eclipse.emf.ecore.impl.MinimalEObjectImpl",
    rootExtendsInterface="org.eclipse.emf.ecore.EObject"
)
package ru.neoflex.nfcore.application
import ru.neoflex.nfcore.base.types.QName
import org.eclipse.emf.ecore.EClass
import org.eclipse.emf.ecore.EObject
import org.eclipse.emf.ecore.EStructuralFeature
import ru.neoflex.nfcore.dataset.DatasetGrid
import ru.neoflex.nfcore.dataset.DatasetPivot
import ru.neoflex.nfcore.dataset.DatasetDiagram
import ru.neoflex.nfcore.dataset.Dataset
import ru.neoflex.nfcore.base.types.JSON

/* Components */
abstract class Component {
    QName name
}

abstract class ViewComponent {
    contains ViewElement view
}

@Ecore(constraints="IsValid")
class UserComponent extends Component {
    String componentClassName
}

class AppModule {
    QName name
    contains ViewElement view
    contains Tools tools
    contains CatalogNode referenceTree
}

class Application extends AppModule {
}

/* Views */
@Ecore(constraints="IsValid")
abstract class ViewElement {
	String name
	container ViewContainer parent opposite children
}

abstract class ViewContainer extends ViewElement {
	contains ViewElement[] children opposite parent
}

abstract class Icon extends ViewElement {	
}

class ClassFeature extends FormItem {
	refers EStructuralFeature eStructuralFeature
}

@GenModel(documentation="max span value = 24 in one row")
class Column extends ViewContainer {
    String span = "24"
}

class ComponentElement extends ViewElement {
	refers Component component
}

class Div extends ViewContainer {
    TextAlign textAlign
    String marginRight = "0"
    String marginBottom = "0"
    String marginTop = "0"
    String marginLeft = "0"
}

class EClassForm extends ViewContainer {
	refers EClass aClass
}

class FAIcon extends Icon {
	String iconCode
}

class Form extends ViewContainer {
}

class FormItem extends ViewContainer {
}

class DatasetView extends ViewElement {
    refers Dataset dataset
}

abstract class DataView extends ViewElement {
    refers DatasetView datasetView
}

@Ecore(constraints="IsValid")
class DatasetGridView extends DataView {
    op JSON getDatasetGrids()
    refers DatasetGrid defaultDatasetGrid
}

class DatasetPivotView extends DataView {
    op JSON getDatasetPivots()
    refers DatasetPivot defaultDatasetPivot
}

class DatasetDiagramView extends DataView {
    op JSON getDatasetDiagrams()
    refers DatasetDiagram defaultDatasetDiagram
}

class Row extends ViewContainer {
}

class Span extends ViewContainer {
}

class TabsViewReport extends ViewContainer {
}

class Tool extends ViewContainer {
	contains Icon icon
}

class Tools extends ViewContainer {
}

class Typography extends ViewElement {
}

/* Trees */
@Ecore(constraints="IsValid")
abstract class TreeNode {
    String name
}

class AppModuleNode extends TreeNode {
    refers AppModule AppModule
    //refers EObject eObject
}

class CatalogNode extends TreeNode {
    contains TreeNode[] children
}

class DynamicNode extends TreeNode {
    String methodName
    refers EObject eObject
}

class EClassNode extends TreeNode {
    contains ViewElement view
    refers EObject eObject
    refers EClass aClass
}

class ViewNode extends TreeNode {
    contains ViewElement view
    refers EObject eObject
}

enum TextAlign {
    Center
    Justify
    Left
    Right
}

