@GenModel(
    bundleManifest="false",
    modelDirectory="ru.neoflex.nfcore.application/src/java/java-gen",
    complianceLevel="7.0",
    rootExtendsClass="org.eclipse.emf.ecore.impl.MinimalEObjectImpl",
    rootExtendsInterface="org.eclipse.emf.ecore.EObject"
)
package ru.neoflex.nfcore.application
import org.eclipse.emf.ecore.EClass
import org.eclipse.emf.ecore.EObject
import org.eclipse.emf.ecore.EStructuralFeature
import ru.neoflex.nfcore.dataset.DatasetComponent
import ru.neoflex.nfcore.dataset.DatasetColumn
import ru.neoflex.nfcore.dataset.Dataset
import ru.neoflex.nfcore.base.types.QName
import ru.neoflex.nfcore.base.types.JSON
import ru.neoflex.nfcore.base.types.Date
import ru.neoflex.nfcore.notification.Notification
import ru.neoflex.nfcore.notification.NotificationStatus

/* Components */
abstract class Component {
    QName name
}

abstract class ViewComponent {
    contains ViewElement view
}

@Ecore(constraints="IsValid")
class UserComponent extends Component {
    String componentClassName
}

class GlobalSettings {
    QName name
    refers YearBook weekendCalendar
    refers YearBook holidayCalendar
    refers YearBook workingDaysCalendar
}

class AppModule {
    QName name
    contains ViewElement view
    contains ToolPanel toolPanel
    contains CatalogNode referenceTree
}

class Application extends AppModule {
    IconName iconName = "faUser"
}

/* Views */
@Ecore(constraints="IsValid")
abstract class ViewElement {
	String name
	container ViewContainer parent opposite children
}

abstract class ViewContainer extends ViewElement {
	contains ViewElement[] children opposite parent
}

abstract class Icon extends ViewElement {	
}

class Calendar extends ViewElement {
    refers Notification[] notifications
    refers YearBook yearBook
    String defaultTitle
    refers NotificationStatus defaultStatus
    op JSON getNotificationInstances(String dateFrom, String dateTo)
    op JSON createNotification(JSON newNotification)
}

class YearBook {
    QName name
    contains Day[] days
    op JSON recreateWeekend(String year)
    op JSON copyHolidays(String yearFrom, String yearTo)
    op JSON recreateWorkingDays(String year)
}

class Day {
    Date date
    String title
}

class ClassFeature extends FormItem {
	refers EStructuralFeature eStructuralFeature
}

@GenModel(documentation="max span value = 24 in one row")
class Column extends ViewContainer {
    String span = "24"
    boolean borderRight
    boolean borderBottom
    boolean borderTop
    boolean borderLeft
}

class ComponentElement extends ViewElement {
	refers Component component
}

class EClassForm extends ViewContainer {
	refers EClass aClass
}

class FAIcon extends Icon {
	String iconCode
}

class Form extends ViewContainer {
}

class FormItem extends ViewContainer {
}

interface SubmittableItems {
    String value
}

class DatasetView extends ViewElement {
    refers Dataset dataset
    refers DatasetComponent datasetComponent
    //TODO interface submittableItems?
    refers ViewElement[] itemsToSubmit
}

abstract class DataView extends ViewElement {
    refers DatasetView datasetView
}

@Ecore(constraints="IsValid")
class DatasetGridView extends DataView {
    op JSON getDatasetGrids() // для чего?
    RowPerPage rowPerPage = "ten"
    Theme theme = "Material"
    boolean showUniqRow//Показывать только уникальные строки
}

class DatasetPivotView extends DataView {
    op JSON getDatasetPivots() // для чего?
}

class DatasetDiagramView extends DataView {
    op JSON getDatasetDiagrams() // для чего?
    refers DatasetColumn indexBy
    refers DatasetColumn keyColumn
    refers DatasetColumn valueColumn
    LegendAnchorPositionType legendAnchorPosition
    AxisXPositionType axisXPosition
    String axisXLegend
    AxisYPositionType axisYPosition
    String axisYLegend
    String colorSchema
    DiagramType diagramType
    //refers DatasetColumn datasetColumn
}

class TabsViewReport extends ViewContainer {
    TabPosition tabPosition = "Top"
}

class Tool {
    String name
	contains Icon icon
}

class ToolPanel {
    contains Tool[] tools
}

class Row extends ViewContainer {
    String horizontalGutter = "0"
    String verticalGutter = "0"
    TextAlign textAlign
    String marginRight = "0px"
    String marginBottom = "0px"
    String marginTop = "0px"
    String marginLeft = "0px"
    boolean borderBottom
    String height
}

class Typography extends ViewElement {
    refers TypographyStyle typographyStyle
    TextAlign textAlign
    boolean buttonCopyable
    boolean buttonEditable
    String ellipsisRow = "999"
    boolean codeStyle
    boolean deleteStyle
    boolean disabledStyle
    boolean markStyle
    boolean underlineStyle
    boolean strongStyle
    String marginTop
    String marginBottom
    String fontSize
    String textIndent
    String height
    String fontWeight = 'inherit'
    String color
    String backgroundColor
    refers GradientStyle gradientStyle
}

class Color {
    String name
}

class GradientStyle extends Style {
    String position
    contains Color[] colors
}

class Select extends ViewElement {
    refers EClass ClassToShow
    boolean disabled
    boolean showSearch
    String placeholder
    SelectMode mode = "Default"
    String width = "200"
    String value // заглушка
}

class DatePicker extends ViewElement {
    boolean disabled
    boolean allowClear
    String width = "200"
    String format = "YYYY-MM-DD"
    String value
}

//add TextArea
class Input extends ViewElement {
    InputType inputType = "InputString"
    String minValue = "1"
    String maxValue = "99"
    String value
    String step = "1"
    String placeholder
    String width = "200"
}

class Button extends ViewElement {
    refers ButtonStyle buttonStyle
    boolean buttonCancel
    boolean buttonSave
    boolean buttonSubmit
    //TODO interface submittableTrigger?
    refers ViewElement[] itemsToTriggerSubmit
    boolean backStartPage
    String span = "0"
}

/* Style */
abstract class Style {
    QName name
}

class TypographyStyle extends Style {
    TextAlign textAlign
    boolean buttonCopyable
    boolean buttonEditable
    String ellipsisRow = "999"
    boolean codeStyle
    boolean deleteStyle
    boolean disabledStyle
    boolean markStyle
    boolean underlineStyle
    boolean strongStyle
    String marginTop
    String marginBottom
    String fontSize
    String textIndent
    String height
    String fontWeight = 'inherit'
    String color
    String backgroundColor
    refers GradientStyle gradientStyle
}

class ButtonStyle extends Style {
    contains Button button
}

/* Trees */
@Ecore(constraints="IsValid")
abstract class TreeNode {
    String name
}

class AppModuleNode extends TreeNode {
    refers AppModule AppModule
    //refers EObject eObject
}

class CatalogNode extends TreeNode {
    contains TreeNode[] children
}

class DynamicNode extends TreeNode {
    String methodName
    refers EObject eObject
}

class EClassNode extends TreeNode {
    contains ViewElement view
    refers EObject eObject
    refers EClass aClass
}

class ViewNode extends TreeNode {
    contains ViewElement view
    refers EObject eObject
}

enum TextAlign {
    Center
    Justify
    Left
    Right
}

enum TabPosition {
    Top
    Right
    Bottom
    Left
}

enum SelectMode {
    Default
    Multiple
    Tags
}

enum InputType {
    InputNumber
    InputString
}

enum RowPerPage {
    one
    ten
    twenty
    fifty
    oneHundred
    fiveHundred
    oneThousand
    all
}

enum Theme {
    Balham
    Blue
    Bootstrap
    Fresh
    Material
}

enum Colors {
    Yellow
    Green
    Blue
    Orange
    Red
}

enum IconName {
    faUser
    faCogs
    faWrench
    faLaravel
    faShieldAlt
    faSpa
    faFile
    faCoins
    faCubes
    faEye
}

enum DiagramType {
    Line
    Bar
    Pie
}

enum LegendAnchorPositionType {
    TopLeft
    Top
    TopRight
    Left
    Center
    Right
    BottomLeft
    Bottom
    BottomRight
}

enum AxisXPositionType {
    Top
    Bottom
}

enum AxisYPositionType {
    Left
    Right
}
