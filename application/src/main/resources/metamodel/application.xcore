@GenModel(
    bundleManifest="false",
    modelDirectory="ru.neoflex.nfcore.application/src/java/java-gen",
    complianceLevel="7.0",
    rootExtendsClass="org.eclipse.emf.ecore.impl.MinimalEObjectImpl",
    rootExtendsInterface="org.eclipse.emf.ecore.EObject"
)
package ru.neoflex.nfcore.application
import org.eclipse.emf.ecore.EObject
import ru.neoflex.nfcore.dataset.DatasetComponent
import ru.neoflex.nfcore.dataset.Dataset
import ru.neoflex.nfcore.dataset.DatasetColumn
import ru.neoflex.nfcore.dataset.FormatMask
import ru.neoflex.nfcore.base.types.QName
import ru.neoflex.nfcore.base.types.JSON
import ru.neoflex.nfcore.base.types.Date
import ru.neoflex.nfcore.base.types.Text
import ru.neoflex.nfcore.base.tag.Tagged
import ru.neoflex.nfcore.notification.Notification
import ru.neoflex.nfcore.notification.NotificationStatus
import ru.neoflex.nfcore.masterdata.EntityType
import ru.neoflex.nfcore.base.auth.GrantType

/* Components */
abstract class Component extends Tagged {
    QName name
}

abstract class ViewComponent {
    contains ViewElement view
}

abstract class DynamicActionElement {

}

abstract class GridComponent {
    GridComponentValueType returnValueType
    boolean isEditGridComponent
}

@Ecore(constraints="IsValid")
class UserComponent extends Component {
    String componentClassName
}

class GlobalSettings extends Tagged {
    QName name
    refers YearBook weekendCalendar
    refers YearBook holidayCalendar
    refers YearBook workingDaysCalendar
    refers AppModule dashboard
}

@Ecore(constraints="IsValid")
class AppModule extends Tagged {
    QName name
    contains ViewElement view
    contains CatalogNode referenceTree
    boolean useParentReferenceTree
}

@Ecore(constraints="IsValid")
class Application extends AppModule {
	boolean checkRights
    GrantType grantType = "Write"
    Integer headerOrder
}

/* Views */
@Ecore(constraints="IsValid")
abstract class ViewElement extends DynamicActionElement {
	String name
	container ViewContainer parent opposite children
	boolean checkRights
    GrantType grantType = "Write"
    boolean hidden
    boolean disabled
    refers CssClass[] cssClass
}

abstract class ViewContainer extends ViewElement {
	contains ViewElement[] children opposite parent
}

abstract class Icon extends ViewElement {	
}

class MasterdataView extends ViewElement {
    refers EntityType entityType
}

class Calendar extends ViewElement {
    refers Notification[] notifications
    refers YearBook yearBook
    String defaultTitle
    refers NotificationStatus defaultStatus
    op JSON getNotificationInstances(String dateFrom, String dateTo)
    op JSON createNotification(JSON newNotification)
}

class Collapse extends ViewContainer{

}

class YearBook extends Tagged {
    QName name
    contains Day[] days
    op JSON recreateWeekend(String year)
    op JSON copyHolidays(String yearFrom, String yearTo)
    op JSON recreateWorkingDays(String year)
}

class Day {
    Date date
    String title
}

@GenModel(documentation="max span value = 24 in one row")
class Column extends ViewContainer {
    String span = "24"
}

class ComponentElement extends ViewElement {
	refers Component component
}

class NeoIcon extends Icon {
	NeoIconCodes iconCode
}

class Form extends ViewContainer {
}

abstract class ValueItem {
    String value
    boolean isGlobal
}

abstract class CommandElement {
    refers ValueItem[] valueItems
}

@Ecore(constraints="IsValid")
class DatasetView extends ViewElement, CommandElement {
    refers DatasetComponent datasetComponent
}

class GroovyCommand extends ViewElement, CommandElement {
    Text command
    String gitResourcePath
    String gitStaticClass
    String gitStaticMethod
    GroovyCommandType commandType = "Eval"
    boolean executeOnStartup
    boolean downloadFile
}

class ValueHolder extends ViewElement, ValueItem {
}

class TabsViewReport extends ViewContainer {
    TabPosition tabPosition = "Top"
}

class Row extends ViewContainer {
}

class Region extends ViewContainer {
}

class Typography extends ViewElement {
    TextAlign textAlign
    boolean buttonCopyable
    boolean buttonEditable
    String ellipsisRow = "999"
    boolean codeStyle
    boolean deleteStyle
    boolean disabledStyle
    boolean markStyle
    boolean underlineStyle
    boolean strongStyle
    boolean required
    TypographyType typographyType
}

class Color {
    String name
}

class Select extends ViewElement, ValueItem, CommandElement, GridComponent {
    String placeholder
    SelectMode mode = "Default"
    boolean isDynamic
    String staticValues
    refers Dataset dataset
    refers DatasetColumn datasetKeyColumn
    refers DatasetColumn datasetValueColumn
}

class DatePicker extends ViewElement, ValueItem {
    boolean allowClear
    refers FormatMask formatMask
    boolean showTime
}

class HtmlContent extends ViewElement, CommandElement {
    String htmlContent

}

//add TextArea
class Input extends ViewElement, ValueItem {
    InputType inputType = "InputString"
    String minValue = "1"
    String maxValue = "99"
    String step = "1"
    String placeholder
}

class Checkbox extends ViewElement, GridComponent, ValueItem {
    String label
    boolean isChecked
}

class Button extends ViewElement, GridComponent {
    String label
}

@Ecore(constraints="IsValid")
class CssClass extends Tagged {
    QName name
    String style
}

/* Trees */
@Ecore(constraints="IsValid")
abstract class TreeNode {
    String name
	boolean checkRights
    GrantType grantType = "Write"
    contains Icon icon
}

class AppModuleNode extends TreeNode {
    refers AppModule AppModule
    //refers EObject eObject
}

class CatalogNode extends TreeNode {
    contains TreeNode[] children
}

class ViewNode extends TreeNode {
    contains ViewElement view
    refers EObject eObject
}

class EventAction {
    Action action
    refers DynamicActionElement triggerItem
    String valueObjectKey
    refers AppModule redirectTo
    refers DynamicActionElement[] redirectParams
}

class EventHandler extends ViewElement {
    Event event
    refers DynamicActionElement[] listenItem
    contains EventAction[] eventActions
    String condition
    refers DynamicActionElement[] conditionItems
}

class Drawer extends ViewContainer {
    TabPosition position
}

class Href extends ViewElement, GridComponent {
    String label
    String ref
}

class Message extends DynamicActionElement, Tagged {
    QName name
    MessageType messageType
    String header
    String message
}

enum TextAlign {
    Left
    Center
    Justify
    Right
}

enum TabPosition {
    Top
    Right
    Bottom
    Left
}

enum SelectMode {
    Default
    Multiple
    Tags
}

enum InputType {
    InputNumber
    InputString
}


enum Colors {
    Yellow
    Green
    Blue
    Orange
    Red
}

enum GroovyCommandType {
    Eval,
    Static,
    Resource
}

enum Action {
    execute
    show
    hide
    enable
    disable
    //clear
    setValue
    showMessage
    redirect
    backToLastPage
}

enum Event {
    click
    change
    componentLoad
}

enum GridComponentValueType {
    string
    object
    none
}

enum MessageType {
    success,
    error,
    info,
    warning,
    open
}

enum TypographyType {
    capture_regular
    h1_regular
    h2_medium
    h2_regular
    h3_medium
    h3_regular
    h4_medium
    h4_regular
    h4_light
    body_medium
    body_regular
    body_light
    body_link
    body_bold
    capture_medium
    capture_link
    capture_light
}

enum NeoIconCodes {
    notification,
    notificationOff,
    question,
    person,
    exit,
    settings,
    filter,
    plusBlock,
    calculator,
    barChart,
    updateClock,
    mark,
    update,
    fullScreen,
    fullScreenUnDo,
    filterCheck,
    plusBlockCheck,
    barChartCheck,
    sortCheck,
    addCheck,
    diagram,
    diagramCircle,
    diagramBlock,
    arrowUp,
    arrowDown,
    arrowVerticalRight,
    arrowLeft,
    arrowRight,
    arrowVerticalLeft,
    moveDown,
    moveUp,
    more,
    table,
    tableUp,
    alert,
    success,
    info,
    warning,
    fileExcel,
    fileWord,
    delete,
    plus,
    close,
    calendar,
    calendarFull,
    rubbish,
    fill,
    letter,
    gear,
    download,
    print,
    list,
    arrowLong,
    edit,
    menuOpen,
    search,
    tiles,
    play,
    show,
    hide,
    journal,
    star,
    starFull,
    addFile,
    attachedFile,
    duplicate,
    exportFile,
    importFile,
    undo,
    checkbox,
    checkboxFill,
    cloudServer,
    code,
    radioButton,
    radioButtonFill,
    switchOff,
    switchOn,
    legend,
    dragAndDrop,
    file,
    compose,
    tools,
    updateTwoLine,
    checkStatus,
    form,
    cloudDownload,
    directory,
    team
}